Bridge.assembly("Bridge.React",function($asm){"use strict";Bridge.define("Bridge.React.ActionMatchOptions",{$kind:"enum",statics:{fields:{handled:0,ignored:1}}});Bridge.define("Bridge.React.IDispatcher",{$kind:"interface"});Bridge.define("Bridge.React.Component$2",function(TProps,TState){return{statics:{fields:{_reactComponentClasses:null},ctors:{init:function(){this._reactComponentClasses=new(System.Collections.Generic.Dictionary$2(Function,System.Object))}},methods:{op_Implicit:function(component){return component==null?null:component._reactElement},op_Implicit$1:function(component){return component==null?null:component._reactElement}}},fields:{_reactElement:null},props:{unwrappedProps:{get:function(){return Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(this.props)}},unwrappedState:{get:function(){return Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(this.state)}},children:{get:function(){return this.props&&this.props.children?Array.isArray(this.props.children)?this.props.children:[this.props.children]:[]}}},ctors:{ctor:function(props,children){var currentType,reactComponentClass,createElementArgs;children===void 0&&(children=[]);this.$initialize();currentType=Bridge.getType(this);reactComponentClass={};Bridge.React.Component$2(TProps,TState)._reactComponentClasses.tryGetValue(currentType,reactComponentClass)||(reactComponentClass.v=Bridge.React.ReactComponentClassCreator.createClass(this,Bridge.React.Component$2(TProps,TState)),Bridge.React.Component$2(TProps,TState)._reactComponentClasses.set(currentType,reactComponentClass.v));createElementArgs=System.Array.init([reactComponentClass.v,Bridge.React.ComponentPropsHelpers.wrapProps(props)],System.Object);children!=null&&(createElementArgs=createElementArgs.concat.apply(createElementArgs,children));this._reactElement=React.createElement.apply(null,createElementArgs)}},methods:{constructorStateInitialiser:function(){return Bridge.getDefaultValue(TState)},componentWillMount:function(){},componentWillReceivePropsWrapped:function(){},componentWillReceiveProps:function(nextPropsIfAny){this.componentWillReceivePropsWrapped(Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(nextPropsIfAny))},shouldComponentUpdateWrapped:function(){return!0},shouldComponentUpdate:function(nextPropsIfAny,nextStateIfAny){return this.shouldComponentUpdateWrapped(Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(nextPropsIfAny),Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(nextStateIfAny))},componentWillUpdateWrapped:function(){},componentWillUpdate:function(nextProps,nextState){this.componentWillUpdateWrapped(Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(nextProps),Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(nextState))},componentDidMount:function(){},componentDidUpdateWrapped:function(){},componentDidUpdate:function(previousProps,previousState){this.componentDidUpdateWrapped(Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(previousProps),Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(previousState))},componentWillUnmount:function(){},setWrappedState:function(state){this.setState({value:state})},setWrappedStateCallback:function(state,callback){this.setState({value:state},callback)},setWrappedStateUsingUpdater:function(updater){var wrappedUpdater=function(prevState,props){var unwrappedPrevState=Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(prevState),unwrappedProps=Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(props);return{value:updater(unwrappedPrevState,unwrappedProps)}};this.setState(wrappedUpdater)},setWrappedStateCallbackUsingUpdater:function(updater,callback){var wrappedUpdater=function(prevState,props){var unwrappedPrevState=Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(prevState),unwrappedProps=Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(props);return{value:updater(unwrappedPrevState,unwrappedProps)}};this.setState(wrappedUpdater,callback)},setWrappedStateAsync:function(state){var tcs=new System.Threading.Tasks.TaskCompletionSource;return this.setWrappedStateCallback(state,function(){tcs.setResult(null)}),tcs.task},setWrappedStateAsyncUsingUpdater:function(updater){var tcs=new System.Threading.Tasks.TaskCompletionSource;return this.setWrappedStateCallbackUsingUpdater(updater,function(){tcs.setResult(null)}),tcs.task}}}});Bridge.define("Bridge.React.ComponentNameHelpers",{statics:{methods:{getDisplayName:function(source){if(source==null)throw new System.ArgumentNullException.$ctor1("source");return Bridge.isPlainObject(source)?"Component":System.Linq.Enumerable.from(System.String.split(Bridge.Reflection.getTypeName(Bridge.getType(source)),[46,91,36,96].map(function(i){return String.fromCharCode(i)}))).first()}}}});Bridge.define("Bridge.React.ComponentPropsHelpers",{statics:{fields:{optimiseFunctionComparisonsBasedOnSolutionBeingPureBridge:!1},ctors:{init:function(){this.optimiseFunctionComparisonsBasedOnSolutionBeingPureBridge=!1}},methods:{wrapProps:function(propsIfAny){var keyIfAny=null,refIfAny=null,keyIfAnyFromPropertyGetter,refIfAnyFromPropertyGetter,wrappedProps;return propsIfAny!=null&&(propsIfAny.key||propsIfAny.key===0?keyIfAny=propsIfAny.key:propsIfAny.Key||propsIfAny.Key===0?keyIfAny=propsIfAny.Key:propsIfAny.getKey&&typeof propsIfAny.getKey=="function"?(keyIfAnyFromPropertyGetter=propsIfAny.getKey(),keyIfAny=keyIfAnyFromPropertyGetter||keyIfAnyFromPropertyGetter===0?keyIfAnyFromPropertyGetter:undefined):keyIfAny=undefined,typeof propsIfAny.ref=="function"?refIfAny=propsIfAny.ref:typeof propsIfAny.Ref=="function"?refIfAny=propsIfAny.Ref:typeof propsIfAny.getRef=="function"?(refIfAnyFromPropertyGetter=propsIfAny.getRef(),refIfAny=typeof refIfAnyFromPropertyGetter=="function"?refIfAnyFromPropertyGetter:undefined):refIfAny=undefined),wrappedProps={value:propsIfAny},typeof keyIfAny!="undefined"&&(wrappedProps.key=keyIfAny),typeof refIfAny!="undefined"&&(wrappedProps.ref=refIfAny),wrappedProps},unWrapValueIfDefined:function(wrappedValueIfAny){return wrappedValueIfAny?wrappedValueIfAny.value:null},doPropsReferencesMatch:function(props1,props2){var optimiseFunctionComparisonsBasedOnSolutionBeingPureBridge,isBridgeType,propName,propValue1,propValue2;if(props1==null&&props2==null)return!0;if(props1==null||props2==null||!Bridge.referenceEquals(Bridge.getType(props1),Bridge.getType(props2)))return!1;optimiseFunctionComparisonsBasedOnSolutionBeingPureBridge=Bridge.React.ComponentPropsHelpers.optimiseFunctionComparisonsBasedOnSolutionBeingPureBridge;isBridgeType=!!props1.$$name&&!!props1.$$fullname||typeof props1.$getType=="function"||typeof props1.$literal=="boolean";for(propName in props1)if(!isBridgeType||propName.substr(0,1)!=="$"){if(propValue1=props1[propName],propValue2=props2[propName],propValue1===propValue2||propValue1===null&&propValue2===null||typeof propValue1=="undefined"&&typeof propValue2=="undefined")continue;else{if(propValue1===null||propValue2===null||typeof propValue1=="undefined"||typeof propValue2=="undefined")return!1;if(typeof propValue1=="function"&&typeof propValue2=="function"){if(propValue1.$scope&&propValue1.$method&&propValue2.$scope&&propValue2.$method&&propValue1.$scope===propValue2.$scope){if(propValue1.$method===propValue2.$method)continue;if(propValue1.$method.toString()===propValue2.$method.toString())continue}else if(optimiseFunctionComparisonsBasedOnSolutionBeingPureBridge&&isBridgeType&&propValue1.toString()===propValue2.toString())return!0}else if(typeof propValue1.equals=="function"&&propValue1.equals(propValue2)===!0)continue}return!1}return!0}}}});Bridge.define("Bridge.React.DispatcherMessage",{props:{source:0,action:null},ctors:{ctor:function(source,action){if(this.$initialize(),source!==Bridge.React.MessageSourceOptions.server&&source!==Bridge.React.MessageSourceOptions.view)throw new System.ArgumentOutOfRangeException.$ctor1("source");if(action==null)throw new System.ArgumentNullException.$ctor1("action");this.source=source;this.action=action}}});Bridge.define("Bridge.React.DispatcherMessageExtensions",{statics:{methods:{"if":function(T,message,work){return new Bridge.React.DispatcherMessageExtensions.DispatcherMessageMatcher(message).else(T,work)},if$1:function(T,message,condition,work){return new Bridge.React.DispatcherMessageExtensions.DispatcherMessageMatcher(message).else$1(T,condition,work)}}}});Bridge.define("Bridge.React.DispatcherMessageExtensions.IMatchDispatcherMessages",{$kind:"nested interface"});Bridge.define("Bridge.React.DispatchToken");Bridge.define("Bridge.React",{statics:{methods:{fixAttr:function(attributes){var data,name;if(!attributes||!attributes.hasOwnProperty("data"))return attributes;data=attributes.data;delete attributes.data;for(name in data)data.hasOwnProperty(name)&&(attributes["data-"+name.replace("_","-")]=data[name]);return attributes},toReactElementArray:function(components){var componentsArray,reactElements,i;if(components==null)throw new System.ArgumentNullException.$ctor1("components");for(componentsArray=System.Linq.Enumerable.from(components).ToArray(),reactElements=System.Array.init(componentsArray.length,null,Object),i=0;i<componentsArray.length;i++)reactElements[i]=componentsArray[i]==null?null:componentsArray[i]._reactElement;return reactElements}}}});Bridge.define("Bridge.React.EnumerableComponentExtensions",{statics:{methods:{toChildComponentArray:function(elements){if(elements==null)throw new System.ArgumentNullException.$ctor1("elements");return System.Linq.Enumerable.from(elements).select($asm.$.Bridge.React.EnumerableComponentExtensions.f1).ToArray(System.Object)},toChildComponentArray$1:function(TProps,components){if(components==null)throw new System.ArgumentNullException.$ctor1("components");return System.Linq.Enumerable.from(components).select(function(component){return Bridge.React.PureComponent$1(TProps).op_Implicit$1(component)}).ToArray(System.Object)},toChildComponentArray$2:function(TProps,components){if(components==null)throw new System.ArgumentNullException.$ctor1("components");return System.Linq.Enumerable.from(components).select(function(component){return Bridge.React.StatelessComponent$1(TProps).op_Implicit$1(component)}).ToArray(System.Object)}}}});Bridge.ns("Bridge.React.EnumerableComponentExtensions",$asm.$);Bridge.apply($asm.$.Bridge.React.EnumerableComponentExtensions,{f1:function(component){return component}});Bridge.define("Bridge.React.IDispatcherAction",{$kind:"interface"});Bridge.define("Bridge.React.IDispatcherActionExtensions",{statics:{methods:{"if":function(T,action,work){return new Bridge.React.IDispatcherActionExtensions.DispatcherActionMatcher(action).else(T,work)},if$2:function(T,action,condition,work){return new Bridge.React.IDispatcherActionExtensions.DispatcherActionMatcher(action).else$2(T,condition,work)},if$1:function(T,action,work){return new Bridge.React.IDispatcherActionExtensions.DispatcherActionMatcher(action).else$1(T,work)}}}});Bridge.define("Bridge.React.IDispatcherActionExtensions.IMatchDispatcherActions",{$kind:"nested interface"});Bridge.define("Bridge.React.KeyboardEvent");Bridge.define("Bridge.React.KeyboardEvent.NamedKeys",{$kind:"nested class",statics:{fields:{unidentified:null,alt:null,altGraph:null,capsLock:null,control:null,fn:null,fnLock:null,meta:null,numLock:null,scrollLock:null,shift:null,symbol:null,symbolLock:null,hyper:null,"super":null,enter:null,tab:null,arrowDown:null,arrowLeft:null,arrowRight:null,arrowUp:null,end:null,home:null,pageDown:null,pageUp:null,backspace:null,clear:null,copy:null,crSel:null,cut:null,"delete":null,eraseEof:null,exSel:null,insert:null,paste:null,redo:null,undo:null,accept:null,again:null,attn:null,cancel:null,contextMenu:null,escape:null,execute:null,find:null,help:null,pause:null,play:null,props:null,select:null,zoomIn:null,zoomOut:null,brightnessDown:null,brightnessUp:null,eject:null,logOff:null,power:null,powerOff:null,printScreen:null,hibernate:null,standby:null,wakeUp:null,allCandidates:null,alphanumeric:null,codeInput:null,compose:null,convert:null,dead:null,finalMode:null,groupFirst:null,groupLast:null,groupNext:null,groupPrevious:null,modeChange:null,nextCandidate:null,nonConvert:null,previousCandidate:null,process:null,singleCandidate:null,hangulMode:null,hanjaMode:null,junjaMode:null,eisu:null,hankaku:null,hiragana:null,hiraganaKatakana:null,kanaMode:null,kanjiMode:null,katakana:null,romaji:null,zenkaku:null,zenkakuHankaku:null,f1:null,f2:null,f3:null,f4:null,f5:null,f6:null,f7:null,f8:null,f9:null,f10:null,f11:null,f12:null,soft1:null,soft2:null,soft3:null,soft4:null,channelDown:null,channelUp:null,close:null,mailForward:null,mailReply:null,mailSend:null,mediaClose:null,mediaFastForward:null,mediaPause:null,mediaPlay:null,mediaPlayPause:null,mediaRecord:null,mediaRewind:null,mediaStop:null,mediaTrackNext:null,mediaTrackPrevious:null,"new":null,open:null,print:null,save:null,spellCheck:null,key11:null,key12:null,audioBalanceLeft:null,audioBalanceRight:null,audioBassBoostDown:null,audioBassBoostToggle:null,audioBassBoostUp:null,audioFaderFront:null,audioFaderRear:null,audioSurroundModeNext:null,audioTrebleDown:null,audioTrebleUp:null,audioVolumeDown:null,audioVolumeUp:null,audioVolumeMute:null,microphoneToggle:null,microphoneVolumeDown:null,microphoneVolumeUp:null,microphoneVolumeMute:null,speechCorrectionList:null,speechInputToggle:null,launchApplication1:null,launchApplication2:null,launchCalendar:null,launchContacts:null,launchMail:null,launchMediaPlayer:null,launchMusicPlayer:null,launchPhone:null,launchScreenSaver:null,launchSpreadsheet:null,launchWebBrowser:null,launchWebCam:null,launchWordProcessor:null,browserBack:null,browserFavorites:null,browserForward:null,browserHome:null,browserRefresh:null,browserSearch:null,browserStop:null,appSwitch:null,call:null,camera:null,cameraFocus:null,endCall:null,goBack:null,goHome:null,headsetHook:null,lastNumberRedial:null,notification:null,mannerMode:null,voiceDial:null,TV:null,tV3DMode:null,tVAntennaCable:null,tVAudioDescription:null,tVAudioDescriptionMixDown:null,tVAudioDescriptionMixUp:null,tVContentsMenu:null,tVDataService:null,tVInput:null,tVInputComponent1:null,tVInputComponent2:null,tVInputComposite1:null,tVInputComposite2:null,tVInputHDMI1:null,tVInputHDMI2:null,tVInputHDMI3:null,tVInputHDMI4:null,tVInputVGA1:null,tVMediaContext:null,tVNetwork:null,tVNumberEntry:null,tVPower:null,tVRadioService:null,tVSatellite:null,tVSatelliteBS:null,tVSatelliteCS:null,tVSatelliteToggle:null,tVTerrestrialAnalog:null,tVTerrestrialDigital:null,tVTimer:null,aVRInput:null,aVRPower:null,colorF0Red:null,colorF1Green:null,colorF2Yellow:null,colorF3Blue:null,colorF4Grey:null,colorF5Brown:null,closedCaptionToggle:null,dimmer:null,displaySwap:null,DVR:null,exit:null,favoriteClear0:null,favoriteClear1:null,favoriteClear2:null,favoriteClear3:null,favoriteRecall0:null,favoriteRecall1:null,favoriteRecall2:null,favoriteRecall3:null,favoriteStore0:null,favoriteStore1:null,favoriteStore2:null,favoriteStore3:null,guide:null,guideNextDay:null,guidePreviousDay:null,info:null,instantReplay:null,link:null,listProgram:null,liveContent:null,lock:null,mediaApps:null,mediaAudioTrack:null,mediaLast:null,mediaSkipBackward:null,mediaSkipForward:null,mediaStepBackward:null,mediaStepForward:null,mediaTopMenu:null,navigateIn:null,navigateNext:null,navigateOut:null,navigatePrevious:null,nextFavoriteChannel:null,nextUserProfile:null,onDemand:null,pairing:null,pinPDown:null,pinPMove:null,pinPToggle:null,pinPUp:null,playSpeedDown:null,playSpeedReset:null,playSpeedUp:null,randomToggle:null,rcLowBattery:null,recordSpeedNext:null,rfBypass:null,scanChannelsToggle:null,screenModeNext:null,settings:null,splitScreenToggle:null,sTBInput:null,sTBPower:null,subtitle:null,teletext:null,videoModeNext:null,wink:null,zoomToggle:null},ctors:{init:function(){this.unidentified="Unidentified";this.alt="Alt";this.altGraph="AltGraph";this.capsLock="CapsLock";this.control="Control";this.fn="Fn";this.fnLock="FnLock";this.meta="Meta";this.numLock="NumLock";this.scrollLock="ScrollLock";this.shift="Shift";this.symbol="Symbol";this.symbolLock="SymbolLock";this.hyper="Hyper";this.super="Super";this.enter="Enter";this.tab="Tab";this.arrowDown="ArrowDown";this.arrowLeft="ArrowLeft";this.arrowRight="ArrowRight";this.arrowUp="ArrowUp";this.end="End";this.home="Home";this.pageDown="PageDown";this.pageUp="PageUp";this.backspace="Backspace";this.clear="Clear";this.copy="Copy";this.crSel="CrSel";this.cut="Cut";this.delete="Delete";this.eraseEof="EraseEof";this.exSel="ExSel";this.insert="Insert";this.paste="Paste";this.redo="Redo";this.undo="Undo";this.accept="Accept";this.again="Again";this.attn="Attn";this.cancel="Cancel";this.contextMenu="ContextMenu";this.escape="Escape";this.execute="Execute";this.find="Find";this.help="Help";this.pause="Pause";this.play="Play";this.props="Props";this.select="Select";this.zoomIn="ZoomIn";this.zoomOut="ZoomOut";this.brightnessDown="BrightnessDown";this.brightnessUp="BrightnessUp";this.eject="Eject";this.logOff="LogOff";this.power="Power";this.powerOff="PowerOff";this.printScreen="PrintScreen";this.hibernate="Hibernate";this.standby="Standby";this.wakeUp="WakeUp";this.allCandidates="AllCandidates";this.alphanumeric="Alphanumeric";this.codeInput="CodeInput";this.compose="Compose";this.convert="Convert";this.dead="Dead";this.finalMode="FinalMode";this.groupFirst="GroupFirst";this.groupLast="GroupLast";this.groupNext="GroupNext";this.groupPrevious="GroupPrevious";this.modeChange="ModeChange";this.nextCandidate="NextCandidate";this.nonConvert="NonConvert";this.previousCandidate="PreviousCandidate";this.process="Process";this.singleCandidate="SingleCandidate";this.hangulMode="HangulMode";this.hanjaMode="HanjaMode";this.junjaMode="JunjaMode";this.eisu="Eisu";this.hankaku="Hankaku";this.hiragana="Hiragana";this.hiraganaKatakana="HiraganaKatakana";this.kanaMode="KanaMode";this.kanjiMode="KanjiMode";this.katakana="Katakana";this.romaji="Romaji";this.zenkaku="Zenkaku";this.zenkakuHankaku="ZenkakuHankaku";this.f1="F1";this.f2="F2";this.f3="F3";this.f4="F4";this.f5="F5";this.f6="F6";this.f7="F7";this.f8="F8";this.f9="F9";this.f10="F10";this.f11="F11";this.f12="F12";this.soft1="Soft1";this.soft2="Soft2";this.soft3="Soft3";this.soft4="Soft4";this.channelDown="ChannelDown";this.channelUp="ChannelUp";this.close="Close";this.mailForward="MailForward";this.mailReply="MailReply";this.mailSend="MailSend";this.mediaClose="MediaClose";this.mediaFastForward="MediaFastForward";this.mediaPause="MediaPause";this.mediaPlay="MediaPlay";this.mediaPlayPause="MediaPlayPause";this.mediaRecord="MediaRecord";this.mediaRewind="MediaRewind";this.mediaStop="MediaStop";this.mediaTrackNext="MediaTrackNext";this.mediaTrackPrevious="MediaTrackPrevious";this.new="New";this.open="Open";this.print="Print";this.save="Save";this.spellCheck="SpellCheck";this.key11="Key11";this.key12="Key12";this.audioBalanceLeft="AudioBalanceLeft";this.audioBalanceRight="AudioBalanceRight";this.audioBassBoostDown="AudioBassBoostDown";this.audioBassBoostToggle="AudioBassBoostToggle";this.audioBassBoostUp="AudioBassBoostUp";this.audioFaderFront="AudioFaderFront";this.audioFaderRear="AudioFaderRear";this.audioSurroundModeNext="AudioSurroundModeNext";this.audioTrebleDown="AudioTrebleDown";this.audioTrebleUp="AudioTrebleUp";this.audioVolumeDown="AudioVolumeDown";this.audioVolumeUp="AudioVolumeUp";this.audioVolumeMute="AudioVolumeMute";this.microphoneToggle="MicrophoneToggle";this.microphoneVolumeDown="MicrophoneVolumeDown";this.microphoneVolumeUp="MicrophoneVolumeUp";this.microphoneVolumeMute="MicrophoneVolumeMute";this.speechCorrectionList="SpeechCorrectionList";this.speechInputToggle="SpeechInputToggle";this.launchApplication1="LaunchApplication1";this.launchApplication2="LaunchApplication2";this.launchCalendar="LaunchCalendar";this.launchContacts="LaunchContacts";this.launchMail="LaunchMail";this.launchMediaPlayer="LaunchMediaPlayer";this.launchMusicPlayer="LaunchMusicPlayer";this.launchPhone="LaunchPhone";this.launchScreenSaver="LaunchScreenSaver";this.launchSpreadsheet="LaunchSpreadsheet";this.launchWebBrowser="LaunchWebBrowser";this.launchWebCam="LaunchWebCam";this.launchWordProcessor="LaunchWordProcessor";this.browserBack="BrowserBack";this.browserFavorites="BrowserFavorites";this.browserForward="BrowserForward";this.browserHome="BrowserHome";this.browserRefresh="BrowserRefresh";this.browserSearch="BrowserSearch";this.browserStop="BrowserStop";this.appSwitch="AppSwitch";this.call="Call";this.camera="Camera";this.cameraFocus="CameraFocus";this.endCall="EndCall";this.goBack="GoBack";this.goHome="GoHome";this.headsetHook="HeadsetHook";this.lastNumberRedial="LastNumberRedial";this.notification="Notification";this.mannerMode="MannerMode";this.voiceDial="VoiceDial";this.TV="TV";this.tV3DMode="TV3DMode";this.tVAntennaCable="TVAntennaCable";this.tVAudioDescription="TVAudioDescription";this.tVAudioDescriptionMixDown="TVAudioDescriptionMixDown";this.tVAudioDescriptionMixUp="TVAudioDescriptionMixUp";this.tVContentsMenu="TVContentsMenu";this.tVDataService="TVDataService";this.tVInput="TVInput";this.tVInputComponent1="TVInputComponent1";this.tVInputComponent2="TVInputComponent2";this.tVInputComposite1="TVInputComposite1";this.tVInputComposite2="TVInputComposite2";this.tVInputHDMI1="TVInputHDMI1";this.tVInputHDMI2="TVInputHDMI2";this.tVInputHDMI3="TVInputHDMI3";this.tVInputHDMI4="TVInputHDMI4";this.tVInputVGA1="TVInputVGA1";this.tVMediaContext="TVMediaContext";this.tVNetwork="TVNetwork";this.tVNumberEntry="TVNumberEntry";this.tVPower="TVPower";this.tVRadioService="TVRadioService";this.tVSatellite="TVSatellite";this.tVSatelliteBS="TVSatelliteBS";this.tVSatelliteCS="TVSatelliteCS";this.tVSatelliteToggle="TVSatelliteToggle";this.tVTerrestrialAnalog="TVTerrestrialAnalog";this.tVTerrestrialDigital="TVTerrestrialDigital";this.tVTimer="TVTimer";this.aVRInput="AVRInput";this.aVRPower="AVRPower";this.colorF0Red="ColorF0Red";this.colorF1Green="ColorF1Green";this.colorF2Yellow="ColorF2Yellow";this.colorF3Blue="ColorF3Blue";this.colorF4Grey="ColorF4Grey";this.colorF5Brown="ColorF5Brown";this.closedCaptionToggle="ClosedCaptionToggle";this.dimmer="Dimmer";this.displaySwap="DisplaySwap";this.DVR="DVR";this.exit="Exit";this.favoriteClear0="FavoriteClear0";this.favoriteClear1="FavoriteClear1";this.favoriteClear2="FavoriteClear2";this.favoriteClear3="FavoriteClear3";this.favoriteRecall0="FavoriteRecall0";this.favoriteRecall1="FavoriteRecall1";this.favoriteRecall2="FavoriteRecall2";this.favoriteRecall3="FavoriteRecall3";this.favoriteStore0="FavoriteStore0";this.favoriteStore1="FavoriteStore1";this.favoriteStore2="FavoriteStore2";this.favoriteStore3="FavoriteStore3";this.guide="Guide";this.guideNextDay="GuideNextDay";this.guidePreviousDay="GuidePreviousDay";this.info="Info";this.instantReplay="InstantReplay";this.link="Link";this.listProgram="ListProgram";this.liveContent="LiveContent";this.lock="Lock";this.mediaApps="MediaApps";this.mediaAudioTrack="MediaAudioTrack";this.mediaLast="MediaLast";this.mediaSkipBackward="MediaSkipBackward";this.mediaSkipForward="MediaSkipForward";this.mediaStepBackward="MediaStepBackward";this.mediaStepForward="MediaStepForward";this.mediaTopMenu="MediaTopMenu";this.navigateIn="NavigateIn";this.navigateNext="NavigateNext";this.navigateOut="NavigateOut";this.navigatePrevious="NavigatePrevious";this.nextFavoriteChannel="NextFavoriteChannel";this.nextUserProfile="NextUserProfile";this.onDemand="OnDemand";this.pairing="Pairing";this.pinPDown="PinPDown";this.pinPMove="PinPMove";this.pinPToggle="PinPToggle";this.pinPUp="PinPUp";this.playSpeedDown="PlaySpeedDown";this.playSpeedReset="PlaySpeedReset";this.playSpeedUp="PlaySpeedUp";this.randomToggle="RandomToggle";this.rcLowBattery="RcLowBattery";this.recordSpeedNext="RecordSpeedNext";this.rfBypass="RfBypass";this.scanChannelsToggle="ScanChannelsToggle";this.screenModeNext="ScreenModeNext";this.settings="Settings";this.splitScreenToggle="SplitScreenToggle";this.sTBInput="STBInput";this.sTBPower="STBPower";this.subtitle="Subtitle";this.teletext="Teletext";this.videoModeNext="VideoModeNext";this.wink="Wink";this.zoomToggle="ZoomToggle"}}}});Bridge.define("Bridge.React.MessageSourceOptions",{$kind:"enum",statics:{fields:{server:0,view:1}}});Bridge.define("Bridge.React.PropsWithKey",{props:{key:null},ctors:{ctor:function(key){this.$initialize();this.key=key}}});Bridge.define("Bridge.React.PureComponent$1",function(TProps){return{statics:{fields:{_reactComponentClasses:null},ctors:{init:function(){this._reactComponentClasses=new(System.Collections.Generic.Dictionary$2(Function,System.Object))}},methods:{op_Implicit:function(component){return component==null?null:component._reactElement},op_Implicit$1:function(component){return component==null?null:component._reactElement}}},fields:{_reactElement:null},props:{unwrappedProps:{get:function(){return Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(this.props)}},children:{get:function(){return this.props&&this.props.children?Array.isArray(this.props.children)?this.props.children:[this.props.children]:[]}}},ctors:{ctor:function(props,children){var currentType,reactComponentClass,createElementArgs;children===void 0&&(children=[]);this.$initialize();currentType=Bridge.getType(this);reactComponentClass={};Bridge.React.PureComponent$1(TProps)._reactComponentClasses.tryGetValue(currentType,reactComponentClass)||(reactComponentClass.v=Bridge.React.ReactComponentClassCreator.createClass(this,Bridge.React.PureComponent$1(TProps)),Bridge.React.PureComponent$1(TProps)._reactComponentClasses.set(currentType,reactComponentClass.v));createElementArgs=System.Array.init([reactComponentClass.v,Bridge.React.ComponentPropsHelpers.wrapProps(props)],System.Object);children!=null&&(createElementArgs=createElementArgs.concat.apply(createElementArgs,children));this._reactElement=React.createElement.apply(null,createElementArgs)}},methods:{componentWillMount:function(){},componentWillReceivePropsWrapped:function(){},componentWillReceiveProps:function(nextPropsIfAny){this.componentWillReceivePropsWrapped(Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(nextPropsIfAny))},shouldComponentUpdate:function(nextPropsIfAny){return!Bridge.React.ComponentPropsHelpers.doPropsReferencesMatch(this.unwrappedProps,Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(nextPropsIfAny))},componentWillUpdateWrapped:function(){},componentWillUpdate:function(nextProps){this.componentWillUpdateWrapped(Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(nextProps))},componentDidMount:function(){},componentDidUpdateWrapped:function(){},componentDidUpdate:function(previousProps){this.componentDidUpdateWrapped(Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(previousProps))},componentWillUnmount:function(){}}}});Bridge.define("Bridge.React.RawHtml",{props:{__html:null}});Bridge.define("Bridge.React.ReactComponentClassCreator",{statics:{methods:{createClass:function(template,baseComponent){function getOwnPropertyDescriptors(obj){for(var key,result={},arrPropertyNames=Object.getOwnPropertyNames(obj),i=0;i<arrPropertyNames.length;i++)key=arrPropertyNames[i],result[key]=Object.getOwnPropertyDescriptor(obj,key);return result}var displayName,reactComponentClass,protoStack,o,i,descriptors,name,descriptor;if(template==null)throw new System.ArgumentNullException.$ctor1("template");if(baseComponent==null)throw new System.ArgumentNullException.$ctor1("baseComponent");for(displayName=Bridge.React.ComponentNameHelpers.getDisplayName(template),reactComponentClass=null,eval("reactComponentClass = function "+displayName+"(props) { Bridge.React.ReactComponentClassCreator.initialiseComponentState(this, props); }"),reactComponentClass.prototype=Object.create(React.Component&&React.Component.prototype,{constructor:{value:reactComponentClass,enumerable:!1,writable:!0,configurable:!0}}),Object.setPrototypeOf?Object.setPrototypeOf(reactComponentClass,React.Component):reactComponentClass.__proto__=React.Component,protoStack=[],o=template.__proto__;o;){if(protoStack.push(o),(o.$$fullname||"")===baseComponent.$$fullname)break;o=o.__proto__}for(i=protoStack.length-1;i>=0;i--){o=protoStack[i];descriptors=getOwnPropertyDescriptors(o);for(name in descriptors)descriptor=descriptors[name],Object.defineProperty(reactComponentClass.prototype,name,descriptor)}return reactComponentClass},initialiseComponentState:function(instance,props){var getInitialState,state;(instance.$init={},getInitialState=instance.constructorStateInitialiser,typeof getInitialState=="function"&&getInitialState.length===0)&&(instance.props=props,state=getInitialState.call(instance),state&&(instance.state={value:state}))}}}});Bridge.define("Bridge.React.ReactElementList",{inherits:[System.Collections.Generic.IEnumerable$1(Object)],statics:{props:{empty:null},ctors:{init:function(){this.empty=new Bridge.React.ReactElementList(System.Array.init(0,null,Object))}}},fields:{_items:null},alias:["getEnumerator",["System$Collections$Generic$IEnumerable$1$Object$GetEnumerator","System$Collections$Generic$IEnumerable$1$GetEnumerator"]],ctors:{ctor:function(items){if(this.$initialize(),items==null)throw new System.ArgumentNullException.$ctor1("items");this._items=items}},methods:{add:function(item){return new Bridge.React.ReactElementList(System.Linq.Enumerable.from(this._items).concat(System.Array.init([item],Object)))},add$2:function(items){if(items==null)throw new System.ArgumentNullException.$ctor1("items");return new Bridge.React.ReactElementList(System.Linq.Enumerable.from(this._items).concat(items))},add$1:function(items){if(items===void 0&&(items=[]),items==null)throw new System.ArgumentNullException.$ctor1("items");return new Bridge.React.ReactElementList(System.Linq.Enumerable.from(this._items).concat(items))},add$3:function(TProps,items){if(items==null)throw new System.ArgumentNullException.$ctor1("items");return new Bridge.React.ReactElementList(System.Linq.Enumerable.from(this._items).concat(System.Linq.Enumerable.from(items).select(function(item){return Bridge.React.PureComponent$1(TProps).op_Implicit(item)})))},add$4:function(TProps,items){if(items==null)throw new System.ArgumentNullException.$ctor1("items");return new Bridge.React.ReactElementList(System.Linq.Enumerable.from(this._items).concat(System.Linq.Enumerable.from(items).select(function(item){return Bridge.React.StatelessComponent$1(TProps).op_Implicit(item)})))},getEnumerator:function(){return Bridge.getEnumerator(this._items,Object)},System$Collections$IEnumerable$GetEnumerator:function(){return this.getEnumerator()}}});Bridge.define("Bridge.React.StatelessComponent$1",function(TProps){return{statics:{fields:{_reactStatelessRenderFunctions:null},ctors:{init:function(){this._reactStatelessRenderFunctions=new(System.Collections.Generic.Dictionary$2(Function,Function))}},methods:{op_Implicit:function(component){return component==null?null:component._reactElement},op_Implicit$1:function(component){return component==null?null:component._reactElement}}},fields:{_reactElement:null},props:{unwrappedProps:{get:function(){return Bridge.React.ComponentPropsHelpers.unWrapValueIfDefined(this.props)}},children:{get:function(){return this.props&&this.props.children?Array.isArray(this.props.children)?this.props.children:[this.props.children]:[]}}},ctors:{ctor:function(props,children){var reactStatelessRenderFunction,currentType,createElementArgs;children===void 0&&(children=[]);this.$initialize();reactStatelessRenderFunction={};currentType=Bridge.getType(this);Bridge.React.StatelessComponent$1(TProps)._reactStatelessRenderFunctions.tryGetValue(currentType,reactStatelessRenderFunction)||(reactStatelessRenderFunction.v=this.createStatelessRenderFunction(),Bridge.React.StatelessComponent$1(TProps)._reactStatelessRenderFunctions.set(currentType,reactStatelessRenderFunction.v));createElementArgs=System.Array.init([reactStatelessRenderFunction.v,Bridge.React.ComponentPropsHelpers.wrapProps(props)],System.Object);children!=null&&(createElementArgs=createElementArgs.concat.apply(createElementArgs,children));this._reactElement=React.createElement.apply(null,createElementArgs)}},methods:{createStatelessRenderFunction:function(){var classPrototype=this.constructor.prototype,scopeBoundFunction=function(props){var target=Object.create(classPrototype);return target.props=props,target.render.apply(target,[])},className=Bridge.React.ComponentNameHelpers.getDisplayName(this),namedScopeBoundFunction=null;return eval("namedScopeBoundFunction = function "+className+"(props) { return scopeBoundFunction(props); };"),namedScopeBoundFunction}}}});Bridge.define("Bridge.React.StaticComponent",{statics:{methods:{pure:function(TProps,renderer,props){var componentClass=renderer.$$componentClass,doPropsReferencesMatch,wrappedProps;return componentClass||(doPropsReferencesMatch=this.doPropsReferencesMatch,componentClass=React.createClass({displayName:renderer.name,render:function(){return renderer(this.props.value)},shouldComponentUpdate:function(nextProps){return!doPropsReferencesMatch(this.props?this.props.value:null,nextProps?nextProps.value:null)}}),renderer.$$componentClass=componentClass),wrappedProps=Bridge.React.ComponentPropsHelpers.wrapProps(props),React.createElement(componentClass,wrappedProps)},stateless:function(TProps,renderer,props){var namedScopeBoundFunction,wrappedProps;return eval("namedScopeBoundFunction = function "+renderer.name+"(props) { return renderer(props ? props.value : props); };"),wrappedProps=Bridge.React.ComponentPropsHelpers.wrapProps(props),React.createElement(namedScopeBoundFunction,wrappedProps)},doPropsReferencesMatch:function(props1,props2){return Bridge.React.ComponentPropsHelpers.doPropsReferencesMatch(props1,props2)}}}});Bridge.define("Bridge.React.Style",{statics:{methods:{mergeWith:function(source,other){var merged={},i;if(source)for(i in source)merged[i]=source[i];if(other)for(i in other)merged[i]=other[i];return merged},height$1:function(height){return{height:height}},height:function(style,height){return style.height=height,style},width$1:function(width){return{width:width}},width:function(style,width){return style.width=width,style},fontSize$1:function(fontSize){return{fontSize:fontSize}},fontSize:function(style,fontSize){return style.fontSize=fontSize,style},margin$2:function(margin){return{margin:margin}},margin$3:function(top,right,bottom,left){return{marginTop:top,marginLeft:left,marginRight:right,marginBottom:bottom}},margin:function(style,margin){return style.margin=margin,style},margin$1:function(style,top,right,bottom,left){return style.marginTop=top,style.marginLeft=left,style.marginRight=right,style.marginBottom=bottom,style},padding$2:function(padding){return{padding:padding}},padding$3:function(top,right,bottom,left){return{paddingTop:top,paddingLeft:left,paddingRight:right,paddingBottom:bottom}},padding:function(style,padding){return style.padding=padding,style},padding$1:function(style,top,right,bottom,left){return style.paddingTop=top,style.paddingLeft=left,style.paddingRight=right,style.paddingBottom=bottom,style}}}});Bridge.define("Bridge.React.AppDispatcher",{inherits:[Bridge.React.IDispatcher],fields:{_callbacks:null,_executingCallbacks:null,_finishedCallbacks:null,_isDispatching:!1,_currentMessage:null},alias:["dispatch","Bridge$React$IDispatcher$dispatch","receive","Bridge$React$IDispatcher$receive","register","Bridge$React$IDispatcher$register","unregister","Bridge$React$IDispatcher$unregister","handleViewAction","Bridge$React$IDispatcher$handleViewAction","handleServerAction","Bridge$React$IDispatcher$handleServerAction","waitFor$1","Bridge$React$IDispatcher$waitFor$1","waitFor","Bridge$React$IDispatcher$waitFor"],ctors:{ctor:function(){this.$initialize();this._callbacks=new(System.Collections.Generic.Dictionary$2(Bridge.React.DispatchToken,Function));this._executingCallbacks=new(System.Collections.Generic.HashSet$1(Bridge.React.DispatchToken).ctor);this._finishedCallbacks=new(System.Collections.Generic.HashSet$1(Bridge.React.DispatchToken).ctor);this._isDispatching=!1;this._currentMessage=null}},methods:{dispatch:function(action){if(action==null)throw new System.ArgumentNullException.$ctor1("action");this.dispatch$1(new Bridge.React.DispatcherMessage(Bridge.React.MessageSourceOptions.view,action))},dispatch$1:function(message){var $t,callback;if(message==null)throw new System.ArgumentNullException.$ctor1("message");if(this._isDispatching)throw new System.InvalidOperationException.$ctor1("Cannot dispatch while already dispatching");this._isDispatching=!0;this._currentMessage=message;this._executingCallbacks.clear();this._finishedCallbacks.clear();try{$t=Bridge.getEnumerator(this._callbacks);try{while($t.moveNext())(callback=$t.Current,this._finishedCallbacks.contains(callback.key))||(this._executingCallbacks.add(callback.key),callback.value(this._currentMessage),this._executingCallbacks.remove(callback.key),this._finishedCallbacks.add(callback.key))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}finally{this._isDispatching=!1;this._currentMessage=null;this._executingCallbacks.clear();this._finishedCallbacks.clear()}},receive:function(callback){if(Bridge.staticEquals(callback,null))throw new System.ArgumentNullException.$ctor1("callback");return this.register(function(message){callback(message.action)})},register:function(callback){if(Bridge.staticEquals(callback,null))throw new System.ArgumentNullException.$ctor1("callback");if(this._isDispatching)throw new System.InvalidOperationException.$ctor1("Cannot register a dispatch token while dispatching");var token=new Bridge.React.DispatchToken;return this._callbacks.add(token,callback),token},unregister:function(token){if(token==null)throw new System.ArgumentNullException.$ctor1("token");if(!this._callbacks.containsKey(token))throw new System.ArgumentException.$ctor3("","token");if(this._isDispatching)throw new System.InvalidOperationException.$ctor1("Cannot unregister a dispatch token while dispatching");if(!this._callbacks.containsKey(token))throw new System.InvalidOperationException.$ctor1(System.String.format("Invalid {0} specified - not currently registered",["token"]));this._callbacks.remove(token)},handleViewAction:function(action){if(action==null)throw new System.ArgumentNullException.$ctor1("action");this.dispatch$1(new Bridge.React.DispatcherMessage(Bridge.React.MessageSourceOptions.view,action))},handleServerAction:function(action){if(action==null)throw new System.ArgumentNullException.$ctor1("action");this.dispatch$1(new Bridge.React.DispatcherMessage(Bridge.React.MessageSourceOptions.server,action))},waitFor$1:function(tokens){var $t,token;if(tokens==null)throw new System.ArgumentNullException.$ctor1("tokens");if(tokens=System.Linq.Enumerable.from(tokens).ToArray(),!System.Linq.Enumerable.from(tokens).any())throw new System.ArgumentException.$ctor1(System.String.format("Empty {0} set - invalid (must wait for at least one DispatchToken)",["tokens"]));if(System.Linq.Enumerable.from(tokens).any($asm.$.Bridge.React.AppDispatcher.f1))throw new System.ArgumentException.$ctor1(System.String.format("Null reference encountered in {0} set",["tokens"]));if(!System.Linq.Enumerable.from(tokens).all(Bridge.fn.bind(this,$asm.$.Bridge.React.AppDispatcher.f2)))throw new System.ArgumentException.$ctor3("All given tokens must be registered with this dispatcher","tokens");if(!this._isDispatching)throw new System.InvalidOperationException.$ctor1("Can only call WaitFor while dispatching");if(System.Linq.Enumerable.from(tokens).any(Bridge.fn.bind(this,$asm.$.Bridge.React.AppDispatcher.f3)))throw new System.ArgumentException.$ctor3("None of the tokens can have its callback already executing","tokens");$t=Bridge.getEnumerator(tokens,Bridge.React.DispatchToken);try{while($t.moveNext())(token=$t.Current,this._finishedCallbacks.contains(token))||(this._executingCallbacks.add(token),this._callbacks.get(token)(this._currentMessage),this._executingCallbacks.remove(token),this._finishedCallbacks.add(token))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},waitFor:function(tokens){tokens===void 0&&(tokens=[]);this.waitFor$1(Bridge.cast(tokens,System.Collections.Generic.IEnumerable$1(Bridge.React.DispatchToken)))}}});Bridge.ns("Bridge.React.AppDispatcher",$asm.$);Bridge.apply($asm.$.Bridge.React.AppDispatcher,{f1:function(token){return token==null},f2:function(token){return this._callbacks.containsKey(token)},f3:function(token){return this._executingCallbacks.contains(token)}});Bridge.define("Bridge.React.DispatcherMessageExtensions.DispatcherMessageMatcher",{inherits:[Bridge.React.DispatcherMessageExtensions.IMatchDispatcherMessages],$kind:"nested class",fields:{_message:null},alias:["else","Bridge$React$DispatcherMessageExtensions$IMatchDispatcherMessages$else","else$1","Bridge$React$DispatcherMessageExtensions$IMatchDispatcherMessages$else$1","ifAnyMatched","Bridge$React$DispatcherMessageExtensions$IMatchDispatcherMessages$ifAnyMatched"],ctors:{ctor:function(message){if(this.$initialize(),message==null)throw new System.ArgumentNullException.$ctor1("message");this._message=message}},methods:{"else":function(T,work){return this.elseWithOptionalCondition(T,null,work)},else$1:function(T,condition,work){if(Bridge.staticEquals(condition,null))throw new System.ArgumentNullException.$ctor1("condition");return this.elseWithOptionalCondition(T,condition,work)},elseWithOptionalCondition:function(T,optionalCondition,work){if(Bridge.staticEquals(work,null))throw new System.ArgumentNullException.$ctor1("work");var actionOfDesiredType=Bridge.as(this._message.action,T);return actionOfDesiredType==null||!Bridge.staticEquals(optionalCondition,null)&&!optionalCondition(actionOfDesiredType)?this:(work(actionOfDesiredType),Bridge.React.DispatcherMessageExtensions.MatchFoundSoMatchNoMoreDispatcherMessageMatcher.instance)},ifAnyMatched:function(work){if(Bridge.staticEquals(work,null))throw new System.ArgumentNullException.$ctor1("work");}}});Bridge.define("Bridge.React.DispatcherMessageExtensions.MatchFoundSoMatchNoMoreDispatcherMessageMatcher",{inherits:[Bridge.React.DispatcherMessageExtensions.IMatchDispatcherMessages],$kind:"nested class",statics:{fields:{instance:null},ctors:{init:function(){this.instance=new Bridge.React.DispatcherMessageExtensions.MatchFoundSoMatchNoMoreDispatcherMessageMatcher}}},alias:["else","Bridge$React$DispatcherMessageExtensions$IMatchDispatcherMessages$else","else$1","Bridge$React$DispatcherMessageExtensions$IMatchDispatcherMessages$else$1","ifAnyMatched","Bridge$React$DispatcherMessageExtensions$IMatchDispatcherMessages$ifAnyMatched"],ctors:{ctor:function(){this.$initialize()}},methods:{"else":function(T,work){if(Bridge.staticEquals(work,null))throw new System.ArgumentNullException.$ctor1("work");return this},else$1:function(T,condition,work){if(Bridge.staticEquals(condition,null))throw new System.ArgumentNullException.$ctor1("condition");if(Bridge.staticEquals(work,null))throw new System.ArgumentNullException.$ctor1("work");return this},ifAnyMatched:function(work){if(Bridge.staticEquals(work,null))throw new System.ArgumentNullException.$ctor1("work");work()}}});Bridge.define("Bridge.React.IDispatcherActionExtensions.DispatcherActionMatcher",{inherits:[Bridge.React.IDispatcherActionExtensions.IMatchDispatcherActions],$kind:"nested class",fields:{_action:null},alias:["else","Bridge$React$IDispatcherActionExtensions$IMatchDispatcherActions$else","else$2","Bridge$React$IDispatcherActionExtensions$IMatchDispatcherActions$else$2","else$1","Bridge$React$IDispatcherActionExtensions$IMatchDispatcherActions$else$1","ifAnyMatched","Bridge$React$IDispatcherActionExtensions$IMatchDispatcherActions$ifAnyMatched"],ctors:{ctor:function(action){if(this.$initialize(),action==null)throw new System.ArgumentNullException.$ctor1("action");this._action=action}},methods:{"else":function(T,work){return this.elseWithOptionalCondition(T,null,work)},else$2:function(T,condition,work){if(Bridge.staticEquals(condition,null))throw new System.ArgumentNullException.$ctor1("condition");return this.elseWithOptionalCondition(T,condition,work)},else$1:function(T,work){if(Bridge.staticEquals(work,null))throw new System.ArgumentNullException.$ctor1("work");var actionOfDesiredType=Bridge.as(this._action,T);return actionOfDesiredType==null?this:work(actionOfDesiredType)===Bridge.React.ActionMatchOptions.ignored?this:Bridge.React.IDispatcherActionExtensions.MatchFoundSoMatchNoMoreDispatcherActionMatcher.instance},elseWithOptionalCondition:function(T,optionalCondition,work){if(Bridge.staticEquals(work,null))throw new System.ArgumentNullException.$ctor1("work");var actionOfDesiredType=Bridge.as(this._action,T);return actionOfDesiredType==null||!Bridge.staticEquals(optionalCondition,null)&&!optionalCondition(actionOfDesiredType)?this:(work(actionOfDesiredType),Bridge.React.IDispatcherActionExtensions.MatchFoundSoMatchNoMoreDispatcherActionMatcher.instance)},ifAnyMatched:function(work){if(Bridge.staticEquals(work,null))throw new System.ArgumentNullException.$ctor1("work");}}});Bridge.define("Bridge.React.IDispatcherActionExtensions.MatchFoundSoMatchNoMoreDispatcherActionMatcher",{inherits:[Bridge.React.IDispatcherActionExtensions.IMatchDispatcherActions],$kind:"nested class",statics:{fields:{instance:null},ctors:{init:function(){this.instance=new Bridge.React.IDispatcherActionExtensions.MatchFoundSoMatchNoMoreDispatcherActionMatcher}}},alias:["else","Bridge$React$IDispatcherActionExtensions$IMatchDispatcherActions$else","else$2","Bridge$React$IDispatcherActionExtensions$IMatchDispatcherActions$else$2","else$1","Bridge$React$IDispatcherActionExtensions$IMatchDispatcherActions$else$1","ifAnyMatched","Bridge$React$IDispatcherActionExtensions$IMatchDispatcherActions$ifAnyMatched"],ctors:{ctor:function(){this.$initialize()}},methods:{"else":function(T,work){if(Bridge.staticEquals(work,null))throw new System.ArgumentNullException.$ctor1("work");return this},else$2:function(T,condition,work){if(Bridge.staticEquals(condition,null))throw new System.ArgumentNullException.$ctor1("condition");if(Bridge.staticEquals(work,null))throw new System.ArgumentNullException.$ctor1("work");return this},else$1:function(T,work){if(Bridge.staticEquals(work,null))throw new System.ArgumentNullException.$ctor1("work");return this},ifAnyMatched:function(work){if(Bridge.staticEquals(work,null))throw new System.ArgumentNullException.$ctor1("work");work()}}})});